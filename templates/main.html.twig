{% extends 'layout/base.html.twig' %}

{% block title %}
Головна
{% endblock %}

{% block body %}
    <div class="container p-5">
{#        <h3 class="mb-5">Пройдіть опитування для отримання автоматизованої стрічки новин</h3>#}

        <div class="quiz-container" id="quiz">
            <div class="quiz-header">
                <h2 class="mb-5">Пройдіть опитування для отримання автоматизованої рекомендаційної стрічки новин</h2>
                <div class="progress">
                    <div class="progress-bar" role="progressbar" style="width: 0%;" aria-valuenow="0" aria-valuemin="0"
                         aria-valuemax="100"></div>
                </div>
            </div>
            <div id="question-container">
                <p class="question" id="question"></p>
                <div class="options" id="options"></div>
            </div>
            <div class="quiz-footer">
                <button class="btn btn-primary" id="next-btn">Next</button>
            </div>
        </div>
    </div>
    <style>
        .quiz-container {
            background-color: white;
            border-radius: 15px;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
            padding: 30px;
            max-width: 600px;
            width: 100%;
            margin: auto;
        }

        .quiz-header {
            text-align: center;
            margin-bottom: 30px;
        }

        .question {
            font-size: 1.2rem;
            margin-bottom: 20px;
        }

        .options {
            display: grid;
            gap: 10px;
        }

        .option {
            background-color: #f8f9fa;
            border: 2px solid #dee2e6;
            border-radius: 10px;
            padding: 15px;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .option:hover {
            background-color: #e9ecef;
        }

        .option.selected {
            background-color: #cfe2ff;
            border-color: #0d6efd;
        }

        .option.correct {
            background-color: #d4edda;
            border-color: #28a745;
        }

        .option.incorrect {
            background-color: #f8d7da;
            border-color: #dc3545;
        }

        .quiz-footer {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: 30px;
        }

        .progress {
            height: 10px;
            margin-bottom: 20px;
        }

        .results {
            text-align: center;
        }

        .result-icon {
            font-size: 4rem;
            margin-bottom: 20px;
        }

        .score {
            font-size: 2rem;
            font-weight: bold;
            margin-bottom: 20px;
        }
    </style>
    <script>
        const quizData = [
            {
                question: "Які теми вас цікавлять?",
                options: ["Спорт", "Здоров'я", "Історія", "Навчання"],
                correct: 1
            },
            {
                question: "Який формат новин вам довподоби?",
                options: ["Короткі дайджести", "Повні аналітичні матеріали", "Відеоновини", "Подкасти"],
                correct: 1
            },
            {
                question: "Який стиль подачі вам подобається?",
                options: ["Об’єктивна інформація", "Журналістські розслідування", "Авторські колонки / думки", "Фактчекінг і аналітика"],
                correct: 1
            },
        ];

        let currentQuestion = 0;
        let score = 0;
        let timeLeft = 30;

        const questionEl = document.getElementById('question');
        const optionsEl = document.getElementById('options');
        const nextBtn = document.getElementById('next-btn');
        const progressBar = document.querySelector('.progress-bar');
        const quizContainer = document.getElementById('quiz');

        let savedButton = '';

        function loadQuestion() {
            const question = quizData[currentQuestion];
            questionEl.textContent = question.question;
            optionsEl.innerHTML = '';
            question.options.forEach((option, index) => {
                const button = document.createElement('button');
                button.setAttribute('data-value', option)
                button.textContent = option;
                button.classList.add('option');
                button.addEventListener('click', () => {
                    selectOption(button, index)
                    if (button.getAttribute('data-value').toLowerCase() === 'спорт') {
                        savedButton = 'спорт';
                    }
                    if (button.getAttribute('data-value').toLowerCase() === 'здоров\'я') {
                        savedButton = 'здоров\'я';
                    }
                    if (button.getAttribute('data-value').toLowerCase() === 'історія') {
                        savedButton = 'історія';
                    }
                    if (button.getAttribute('data-value').toLowerCase() === 'навчання') {
                        savedButton = 'навчання';
                    }
                });
                optionsEl.appendChild(button);
            });
            nextBtn.style.display = 'none';
            timeLeft = 30;
            updateProgress();
        }

        function selectOption(selectedButton, optionIndex) {
            console.log(selectedButton)
            const buttons = optionsEl.getElementsByClassName('option');
            Array.from(buttons).forEach(button => button.classList.remove('selected'));
            selectedButton.classList.add('selected');
            nextBtn.style.display = 'block';
        }

        function checkAnswer() {
            const selectedOption = document.querySelector('.option.selected');
            if (!selectedOption) return;

            const selectedAnswer = Array.from(optionsEl.children).indexOf(selectedOption);
            const question = quizData[currentQuestion];

            if (selectedAnswer === question.correct) {
                score++;
                selectedOption.classList.add('correct');
            } else {
                selectedOption.classList.add('incorrect');
                optionsEl.children[question.correct].classList.add('correct');
            }

            Array.from(optionsEl.children).forEach(button => button.disabled = true);
        }

        function updateProgress() {
            const progress = ((currentQuestion + 1) / quizData.length) * 100;
            progressBar.style.width = `${progress}%`;
            progressBar.setAttribute('aria-valuenow', progress);
        }

        function showResults() {
            quizContainer.innerHTML = `
                <div class="results">
                    <div class="result-icon">
                        <i class="fas ${score > quizData.length / 2 ? 'fa-trophy text-success' : 'fa-times-circle text-danger'}"></i>
                    </div>
                    <div class="score">Стрічка новин персоналізована!</div>
                    <button class="btn btn-primary" id="resetButton" ">Пройти опитувальник заново</button>
                </div>
            `;
        }

        nextBtn.addEventListener('click', () => {
            checkAnswer();
            currentQuestion++;
            if (currentQuestion < quizData.length) {
                loadQuestion();
            } else {
                showResults();
                saveQuizResult();
            }
        });

        loadQuestion();

        async function saveQuizResult() {
            try {
                const response = await fetch("/api/save-quiz-result", {
                    method: "post",
                    body: JSON.stringify({categoryName: savedButton})
                });
                const data = await response.json();
            } catch (err) {
                console.error(err)
            }
        }

        const resetButton = document.getElementById('resetButton')
        resetButton.onclick = async function () {
            try {
                await fetch("/api/save-quiz-result/reset");
            } catch (err) {
                console.error(err)
            } finally {
                location.reload()
            }

        }
    </script>
{% endblock %}